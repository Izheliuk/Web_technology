1. Загальний опис

Було створено односторінковий застосунок, що дозволяє взаємодіяти з кількома публічними API та підтримує чат у реальному часі через WebSocket. Проєкт побудований на HTML, CSS, JavaScript (Vanilla) та Node.js для WebSocket-серверу.
2. Основні компоненти
2.1 API-інтерфейс

    index.html — головна сторінка застосунку. Містить кнопки для завантаження даних з різних API (NASA, SpaceX, RandomUser).

    data.html — сторінка для відображення результатів, отриманих з API.

    app.js — JavaScript-код, який обробляє запити до API, динамічно оновлює DOM та показує дані користувачу.

2.2 Чат через WebSocket

    chat.html — веб-інтерфейс простого чату. Повідомлення надсилаються та приймаються через WebSocket-з'єднання.

    ws-server.js — WebSocket-сервер, написаний на Node.js, який дозволяє обмін повідомленнями між користувачами в реальному часі.

3. Стилізація

    styles.css — єдиний файл стилів для всіх сторінок. Містить стилі для:

        кнопок і форм;

        адаптивної верстки (медіа-запити для мобільних пристроїв);

        чат-блоку;

        контейнерів для даних API.

4. Технічна інфраструктура

    package.json — конфігураційний файл npm. Включає два основні скрипти:

        npm run start — запускає HTTP-сервер для SPA;

        npm run ws — запускає WebSocket-сервер.

    Використані бібліотеки:

        http-server — для локального запуску клієнта;

        ws — для реалізації WebSocket-серверу.